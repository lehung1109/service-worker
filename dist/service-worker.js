const l="OSW",n=`${l}-v1`,r="/offline.html";async function o(e,s,a){new URL(e.request.url).origin===location.origin&&await s.put(e.request,a)}async function c(e,s){const a=await e.preloadResponse;if(a)return o(e,s,a.clone()),a;const t=await fetch(e.request);return t&&o(e,s,t.clone()),t}self.addEventListener("install",e=>{e.waitUntil((async()=>{self.skipWaiting(),await(await caches.open(n)).addAll([r]),console.log("sw installed")})())});self.addEventListener("activate",e=>{e.waitUntil((async()=>{self.clients.claim(),self.registration.navigationPreload&&await self.registration.navigationPreload.enable();const s=await caches.keys();Promise.all(s.map(a=>{if(a.startsWith(l)&&a!==n)return console.log("sw remove old cache"+n),caches.delete(a)})),console.log("sw activated")})())});self.addEventListener("fetch",e=>{e.respondWith((async()=>{let s;const a=await caches.open(n),t=await a.match(e.request);try{return t?(s=t,e.waitUntil(c(e,a))):s=await c(e,a),s}catch(i){if(e.request.mode==="navigate")return console.log("Fetch failed; returning offline page instead.",i),a.match(r);console.log(i)}})())});
